package prop.presentation;

import prop.PropException;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.management.ManagementFactory;
import java.lang.management.ThreadMXBean;
import java.util.ArrayList;

public class AlgorithmInputView extends JPanel {

    private SongPController songPController;
    private UserPController userPController;
    private ListPController listPController;
    private AlgorithmPController algorithmPController;
    private ArrayList<String> simpleRelations;
    private ArrayList<String> complexRelations;
    private DefaultListModel simpleRelationsModel;
    private DefaultListModel complexRelationsModel;
    private AlgorithmTabView algorithmTabView;
    private Timer timer;
    private JButton addSimpleRelationButton;
    private JButton addComplexRelationButton;
    private JButton executeButton;
    private JButton removeSimpleRelationButton;
    private JButton removeComplexRelationButton;
    private JComboBox jComboBox1;
    private JComboBox algorithmComboBox;
    private JComboBox jComboBox3;
    private JLabel jLabel1;
    private JLabel jLabel2;
    private JLabel jLabel3;
    private JLabel complexRelationDescription;
    private JLabel selectAlgoruthLabel;
    private JList simpleRelationsList;
    private JList complexRelationsList;
    private JPanel jPanel1;
    private JPanel jPanel2;
    private JPanel jPanel3;
    private JScrollPane jScrollPane1;
    private JScrollPane jScrollPane2;
    private JSeparator jSeparator1;
    private JSeparator jSeparator2;
    private JSeparator jSeparator3;
    private JSpinner jSpinner2;
    private JTextField jTextField2;
    private JTextField jTextField3;
    private JTextField listTitleField;
    private JLabel jLabel6;
    private JLabel errorLabel;
    private JLabel communitiesLabel;
    private JSpinner numberOfCommunities;

    public AlgorithmInputView(SongPController spc, UserPController upc, AlgorithmPController apc, ListPController lpc, AlgorithmTabView atv) {
        songPController = spc;
        userPController = upc;
        algorithmPController = apc;
        listPController = lpc;
        algorithmTabView = atv;
        simpleRelations = new ArrayList<>();
        complexRelations = new ArrayList<>();
        initComponents();
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */

    private void initComponents() {

        jLabel1 = new JLabel();
        jSeparator1 = new JSeparator();
        jComboBox1 = new JComboBox();
        jLabel2 = new JLabel();
        jScrollPane1 = new JScrollPane();
        simpleRelationsList = new JList();
        jLabel3 = new JLabel();
        jTextField2 = new JTextField();
        addSimpleRelationButton = new JButton();
        addComplexRelationButton = new JButton();
        jScrollPane2 = new JScrollPane();
        complexRelationsList = new JList();
        executeButton = new JButton();
        complexRelationDescription = new JLabel();
        selectAlgoruthLabel = new JLabel();
        removeSimpleRelationButton = new JButton();
        removeComplexRelationButton = new JButton();
        algorithmComboBox = new JComboBox();
        jSeparator2 = new JSeparator();
        jSeparator3 = new JSeparator();
        jPanel1 = new JPanel();
        jPanel2 = new JPanel();
        jPanel3 = new JPanel();
        jSpinner2 = new JSpinner();
        jTextField3 = new JTextField();
        jComboBox3 = new JComboBox();
        jLabel6 = new JLabel();
        listTitleField = new JTextField();
        errorLabel = new JLabel();
        communitiesLabel = new JLabel();
        numberOfCommunities = new JSpinner();

        jSpinner2.setVisible(false);
        jComboBox3.setVisible(false);

        simpleRelationsModel = new DefaultListModel();
        simpleRelationsList.setModel(simpleRelationsModel);

        complexRelationsModel = new DefaultListModel();
        complexRelationsList.setModel(complexRelationsModel);

        SpinnerNumberModel communitiesModel = new SpinnerNumberModel(1,1,999999,1);
        numberOfCommunities = new JSpinner(communitiesModel);

        jLabel1.setText("Algorithm Input");

        jComboBox1.setModel(new DefaultComboBoxModel(new String[]{"Song title", "Song artist", "Song album",
                "Song year", "Song genre", "Song subgenre", "Song duration", "User name", "User age", "User gender"}));
        jComboBox1.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel2.setText("New simple relation");


        jScrollPane1.setViewportView(simpleRelationsList);

        jLabel3.setText("New complex relation");

        addSimpleRelationButton.setText("Add");
        addSimpleRelationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addSimpleRelation(evt);
            }
        });

        addComplexRelationButton.setText("Add");
        addComplexRelationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                addComplexRelation(evt);
            }
        });


        jScrollPane2.setViewportView(complexRelationsList);

        executeButton.setText("Execute");
        executeButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                execute(evt);
            }
        });

        complexRelationDescription.setFont(new java.awt.Font("Dialog", 2, 12)); // NOI18N
        complexRelationDescription.setText("Ex: ((0|1)&!2)");

        selectAlgoruthLabel.setText("Select algorithm");

        removeSimpleRelationButton.setText("Remove");
        removeSimpleRelationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                removeSimpleRelation(evt);
            }
        });

        removeComplexRelationButton.setText("Remove");
        removeComplexRelationButton.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent evt) {
                removeComplexRelation(evt);
            }
        });

        jLabel6.setText("List title");

        String[] algorithms = {"Girvan-Newman", "Louvain", "Clique Percolation Method"};
        algorithmComboBox.setModel(new DefaultComboBoxModel(algorithms));

        jPanel1.setLayout(new BoxLayout(jPanel1, BoxLayout.LINE_AXIS));

        jPanel2.setLayout(new BoxLayout(jPanel2, BoxLayout.LINE_AXIS));

        jLabel6.setText("List title");

        errorLabel.setText("Error");
        errorLabel.setVisible(false);
        errorLabel.setForeground(Color.red);

        communitiesLabel.setText("Communities");

        jComboBox3.setModel(new DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        GroupLayout jPanel3Layout = new GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addComponent(jTextField3)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jSpinner2, GroupLayout.PREFERRED_SIZE, 80, GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jComboBox3, GroupLayout.PREFERRED_SIZE, 201, GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
                jPanel3Layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jComboBox3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSpinner2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        GroupLayout layout = new GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jSeparator2, GroupLayout.Alignment.TRAILING)
                                        .addComponent(jSeparator1)
                                        .addComponent(jSeparator3)
                                        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(addComplexRelationButton)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addComponent(removeComplexRelationButton))
                                                        .addComponent(jLabel3)
                                                        .addComponent(complexRelationDescription)
                                                        .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, 350, GroupLayout.PREFERRED_SIZE))
                                                .addGap(18, 18, 18)
                                                .addComponent(jScrollPane2))
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(addSimpleRelationButton)
                                                                .addGap(10, 10, 10)
                                                                .addComponent(removeSimpleRelationButton))
                                                        .addComponent(jComboBox1, 0, 347, Short.MAX_VALUE)
                                                        .addComponent(jPanel3, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                .addGap(19, 19, 19)
                                                .addComponent(jScrollPane1))
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addComponent(selectAlgoruthLabel)
                                                        .addComponent(jLabel6, GroupLayout.PREFERRED_SIZE, 87, GroupLayout.PREFERRED_SIZE)
                                                        .addComponent(executeButton)
                                                        .addComponent(communitiesLabel, GroupLayout.PREFERRED_SIZE, 101, GroupLayout.PREFERRED_SIZE))
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING, false)
                                                                        .addComponent(algorithmComboBox, 0, 204, Short.MAX_VALUE)
                                                                        .addComponent(listTitleField))
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(320, 320, 320)
                                                                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                                        .addGroup(layout.createSequentialGroup()
                                                                                .addGap(370, 370, 370)
                                                                                .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
                                                        .addComponent(numberOfCommunities, GroupLayout.PREFERRED_SIZE, 52, GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(errorLabel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(20, 20, 20))
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jSeparator1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2)
                                .addGap(12, 12, 12)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                                .addComponent(jComboBox1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jPanel3, GroupLayout.PREFERRED_SIZE, 26, GroupLayout.PREFERRED_SIZE)
                                                .addGap(5, 5, 5)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                        .addComponent(addSimpleRelationButton)
                                                        .addComponent(removeSimpleRelationButton))
                                                .addGap(39, 39, 39)
                                                .addComponent(jSeparator2, GroupLayout.PREFERRED_SIZE, 2, GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addComponent(jLabel3)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(complexRelationDescription)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                                                .addComponent(jTextField2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                        .addComponent(addComplexRelationButton)
                                                                        .addComponent(removeComplexRelationButton)))
                                                        .addGroup(layout.createSequentialGroup()
                                                                .addGap(10, 10, 10)
                                                                .addComponent(jScrollPane2, GroupLayout.PREFERRED_SIZE, 95, GroupLayout.PREFERRED_SIZE)))
                                                .addGap(26, 26, 26)
                                                .addComponent(jSeparator3, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                                        .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                                                .addComponent(selectAlgoruthLabel)
                                                                .addComponent(algorithmComboBox, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                                        .addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)))
                                        .addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 94, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel6)
                                        .addComponent(listTitleField, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                                        .addComponent(communitiesLabel)
                                        .addComponent(numberOfCommunities, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                                .addGap(19, 19, 19)
                                .addComponent(executeButton)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(errorLabel)
                                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel1, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
        );
    }
    private void addSimpleRelation(ActionEvent evt) {
        int i = jComboBox1.getSelectedIndex();
        String s;
        if (i == 0) s = "song_title|" + jTextField3.getText().trim();
        else if (i == 1) s = "song_artist|" + jTextField3.getText().trim();
        else if (i == 2) s = "song_album|" + jTextField3.getText().trim();
        else if (i == 3) s = "song_year|" + jSpinner2.getValue().toString();
        else if (i == 4) s = "song_genre|" + jComboBox3.getSelectedIndex();
        else if (i == 5) s = "song_subgenre|" + jComboBox3.getSelectedIndex();
        else if (i == 6) s = "song_duration|" + jSpinner2.getValue().toString();
        else if (i == 7) s = "user_name|" + jTextField3.getText().trim();
        else if (i == 8) s = "user_age|" + jSpinner2.getValue().toString();
        else {
            s = "user_gender|";
            if (jComboBox3.getSelectedIndex() == 0) s += "FEMALE";
            else if (jComboBox3.getSelectedIndex() == 1) s += "MALE";
            else s += "OTHER";
        }
        simpleRelations.add(s);
        updateSimpleRelationListModel();
    }

    private void addComplexRelation(ActionEvent evt) {
        String s = jTextField2.getText().trim();
        complexRelations.add(s);
        updateComplexRelationListModel();
    }

    private void removeSimpleRelation(ActionEvent evt) {
        if (!simpleRelationsList.isSelectionEmpty()) {
            int i = simpleRelationsList.getSelectedIndex();
            simpleRelations.remove(i);
            updateSimpleRelationListModel();
        }
    }

    private void removeComplexRelation(ActionEvent evt) {
        if (!complexRelationsList.isSelectionEmpty()) {
            int i = complexRelationsList.getSelectedIndex();
            complexRelations.remove(i);
            updateComplexRelationListModel();
        }
    }

    private void execute(java.awt.event.ActionEvent evt) {
        if (listTitleField.getText().length() < 1) {
            errorLabel.setText("List title cannot be empty");
            errorLabel.setVisible(true);
            ActionListener listener = new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    errorLabel.setVisible(false);
                }
            };
            Timer timer = new Timer(3000, listener);
            timer.start();
        }
        else {
            algorithmPController.initGraph();
            String[] simpRel = new String[simpleRelations.size()];
            simpRel = simpleRelations.toArray(simpRel);
            for (String s : complexRelations) {
                try {
                    algorithmPController.addRelation(simpRel, s, simpleRelations.size());
                } catch (PropException e) {
                   throwError(e.getMessage());
                }
            }
        }
        try {
            double start = getCpuTime();
            algorithmPController.execute(listTitleField.getText().trim(), algorithmComboBox.getSelectedIndex(), (Integer) numberOfCommunities.getValue(), listPController.getListController(), algorithmPController.getRelationController());
            double time = (getCpuTime() - start) / 1e9;
            System.out.println("Execution time: " + time + " s");
            algorithmTabView.setOutputPanel(listTitleField.getText().trim());
        } catch (PropException e) {
            throwError(e.getMessage());
        }
    }

    private double getCpuTime( ) {
        ThreadMXBean bean = ManagementFactory.getThreadMXBean();
        return bean.isCurrentThreadCpuTimeSupported( ) ?
                bean.getCurrentThreadCpuTime( ) : 0L;
    }

    private void jComboBox1ActionPerformed(ActionEvent evt) {
        if (jComboBox1.getSelectedIndex() == 0 ||
                jComboBox1.getSelectedIndex() == 1 ||
                jComboBox1.getSelectedIndex() == 2 ||
                jComboBox1.getSelectedIndex() == 7) {
            jTextField3.setVisible(true);
            jComboBox3.setVisible(false);
            jSpinner2.setVisible(false);
        }
        else if (jComboBox1.getSelectedIndex() == 4 ||
                jComboBox1.getSelectedIndex() == 5 ||
                jComboBox1.getSelectedIndex() == 9) {
            jTextField3.setVisible(false);
            jComboBox3.setVisible(true);
            jSpinner2.setVisible(false);
            if (jComboBox1.getSelectedIndex() == 9) {
                jComboBox3.setModel(new DefaultComboBoxModel(userPController.getGenres()));
            } else {
                jComboBox3.setModel(new DefaultComboBoxModel(songPController.listGenres()));
            }
        }
        else {
            jTextField3.setVisible(false);
            jComboBox3.setVisible(false);
            jSpinner2.setVisible(true);
        }
    }


    public void updateSimpleRelationListModel() {
        simpleRelationsModel.clear();
        int i;
        for (i = 0; i < simpleRelations.size(); ++i) {
            simpleRelationsModel.addElement("(" + i + ")" + " " + simpleRelations.get(i));
        }
    }

    public void updateComplexRelationListModel() {
        complexRelationsModel.clear();
        int i;
        for (i = 0; i < complexRelations.size(); ++i) {
            complexRelationsModel.addElement(complexRelations.get(i));
        }
    }

    protected void throwError(String error) {
        errorLabel.setText(error);
        errorLabel.setVisible(true);
        errorLabel.setForeground(Color.red);
        ActionListener listener = new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                errorLabel.setVisible(false);
            }
        };
        if(timer!=null)
            timer.stop();
        else {
            timer = new Timer(3000, listener);
        }
        timer.start();
    }
}